{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["intialState","title","body","userId","titleError","bodyError","useridError","FormControl","props","state","handleChange","bind","handleSubmit","event","value","target","this","setState","name","preventDefault","validate","console","log","className","onSubmit","htmlFor","type","onChange","placeholder","id","style","color","fontSize","fontWeight","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2SAGOA,EAAc,CAChBC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,WAAY,GACZC,UAAW,GACXC,YAAa,IAmIFC,E,kDA/HX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQT,EACb,EAAKU,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJL,E,gDAOnB,SAAaE,GACT,IAAMC,EAAQD,EAAME,OAAOD,MAC3BE,KAAKC,SAAL,2BACOD,KAAKP,OADZ,kBAEKI,EAAME,OAAOG,KAAOJ,O,sBAI7B,WAGI,MAAyB,KAArBE,KAAKP,MAAMR,OACXe,KAAKC,SAAS,CACVb,WAAY,yBAET,GAKa,KAApBY,KAAKP,MAAMP,MACXc,KAAKC,SAAS,CACVZ,UAAW,wBAER,GAKe,KAAtBW,KAAKP,MAAMN,SACXa,KAAKC,SAAS,CACVX,YAAa,sBAEV,K,0BAKf,SAAaO,GACTA,EAAMM,iBACQH,KAAKI,aAEfC,QAAQC,IAAIN,KAAKP,OACjBO,KAAKC,SAASjB,M,oBAMtB,WACI,OAEI,mCAGA,qBACIuB,UAAY,iBADhB,SAGA,uBACKA,UAAY,OACjBC,SAAaR,KAAKJ,aAFlB,UAIA,uBACMa,QAAU,QADhB,qBAJA,IAK0C,uBACpCC,KAAO,OACbR,KAAO,QACPJ,MAAUE,KAAKP,MAAMR,MACrB0B,SAAaX,KAAKN,aAClBkB,YAAc,UACd,uBACKC,GAAK,OACVC,MACI,CAAEC,MAAO,MAAOC,SAAU,OAAQC,WAAY,OAHlD,cAIMjB,KAAKP,MAAML,WAJjB,OAMA,uBACMqB,QAAU,OADhB,oBAjBA,IAkBwC,uBAClCC,KAAO,OACbR,KAAO,OACPJ,MAAUE,KAAKP,MAAMP,KACrB0B,YAAc,aACdD,SAAaX,KAAKN,eAGlB,uBACKmB,GAAK,OACVC,MACI,CAAEC,MAAO,MAAOC,SAAU,OAAQC,WAAY,OAHlD,cAIMjB,KAAKP,MAAMJ,UAJjB,OA1BA,IA8BsC,uBAChCoB,QAAU,SADsB,sBA9BtC,IA+B4C,uBACtCC,KAAO,OACbE,YAAc,SACdd,MAAUE,KAAKP,MAAMN,OACrBwB,SAAaX,KAAKN,aAClBQ,KAAO,WACP,uBACKW,GAAK,OACVC,MACI,CAAEC,MAAO,MAAOC,SAAU,OAAQC,WAAY,OAHlD,cAIMjB,KAAKP,MAAMH,YAJjB,OArCA,IAyCwC,wBACjCoB,KAAO,SAD0B,sBAzCxC,e,GAlEcQ,IAAMC,WCAlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAQ,cACb,EADa,IAEbC,SAASC,eAAe,SAG5BZ,M","file":"static/js/main.c159aafa.chunk.js","sourcesContent":[" import './App.css';\n import React from 'react';\n\n const intialState = {\n     title: '',\n     body: '',\n     userId: '',\n     titleError: '',\n     bodyError: '',\n     useridError: ''\n };\n\n class FormControl extends React.Component {\n     constructor(props) {\n         super(props);\n         this.state = intialState;\n         this.handleChange = this.handleChange.bind(this);\n         this.handleSubmit = this.handleSubmit.bind(this);\n     }\n\n     handleChange(event) {\n         const value = event.target.value;\n         this.setState({\n             ...this.state,\n             [event.target.name]: value\n         });\n     }\n\n     validate() {\n\n\n         if (this.state.title === '') {\n             this.setState({\n                 titleError: 'enter a valid title'\n             })\n             return false;\n         }\n\n\n\n         if (this.state.body === '') {\n             this.setState({\n                 bodyError: 'enter a valid body'\n             })\n             return false;\n         }\n\n\n\n         if (this.state.userId === '') {\n             this.setState({\n                 useridError: 'enter a valid Id'\n             })\n             return false;\n         }\n         return true;\n     }\n\n     handleSubmit(event) {\n         event.preventDefault();\n         let isValid = this.validate();\n         if (isValid) {\n             console.log(this.state);\n             this.setState(intialState);\n         }\n\n\n     }\n\n     render() {\n         return (\n\n             <\n             >\n\n             <\n             div className = 'form-container' >\n\n             <\n             form className = 'form'\n             onSubmit = { this.handleSubmit } >\n\n             <\n             label htmlFor = 'title' > title < /label> <\n             input type = 'text'\n             name = 'title'\n             value = { this.state.title }\n             onChange = { this.handleChange }\n             placeholder = 'title' / >\n             <\n             span id = 'span'\n             style = {\n                 { color: 'red', fontSize: '15px', fontWeight: '400' }\n             } > { this.state.titleError } < /span>\n\n             <\n             label htmlFor = 'body' > body < /label> <\n             input type = 'text'\n             name = 'body'\n             value = { this.state.body }\n             placeholder = 'enter body'\n             onChange = { this.handleChange }\n             />\n\n             <\n             span id = 'span'\n             style = {\n                 { color: 'red', fontSize: '15px', fontWeight: '400' }\n             } > { this.state.bodyError } < /span> <\n             label htmlFor = 'userId' > userId < /label> <\n             input type = 'text'\n             placeholder = 'userId'\n             value = { this.state.userId }\n             onChange = { this.handleChange }\n             name = 'userId' / >\n             <\n             span id = 'span'\n             style = {\n                 { color: 'red', fontSize: '15px', fontWeight: '400' }\n             } > { this.state.useridError } < /span> <\n             button type = 'submit' > submit < /button> < /\n             form >\n\n\n\n             <\n             /div>\n\n\n\n\n             <\n             />\n\n\n         );\n     }\n }\n\n\n export default FormControl;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FormControl from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    FormControl / > ,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}